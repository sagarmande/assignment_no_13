class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def create_new_linked_list(head1, head2):
    new_head = None
    current1 = head1
    current2 = head2

    while current1 and current2:
        if current1.data > current2.data:
            new_node = Node(current1.data)
            if not new_head:
                new_head = new_node
            else:
                new_tail.next = new_node
            new_tail = new_node
            current1 = current1.next
        else:
            new_node = Node(current2.data)
            if not new_head:
                new_head = new_node
            else:
                new_tail.next = new_node
            new_tail = new_node
            current2 = current2.next

    # If any list is longer than the other, append the remaining nodes to the new list
    while current1:
        new_node = Node(current1.data)
        new_tail.next = new_node
        new_tail = new_node
        current1 = current1.next

    while current2:
        new_node = Node(current2.data)
        new_tail.next = new_node
        new_tail = new_node
        current2 = current2.next

    return new_head

# Creating the first linked list
head1 = Node(2)
head1.next = Node(5)
head1.next.next = Node(9)
head1.next.next.next = Node(12)

# Creating the second linked list
head2 = Node(3)
head2.next = Node(6)
head2.next.next = Node(7)
head2.next.next.next = Node(10)

# Creating the new linked list
new_head = create_new_linked_list(head1, head2)

# Printing the new linked list
current = new_head
while current:
    print(current.data, end=" ")
    current = current.next

# Output: 3 6 9 12
